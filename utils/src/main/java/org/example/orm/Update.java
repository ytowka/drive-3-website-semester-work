package org.example.orm;

import java.lang.reflect.Field;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static org.example.orm.ORM.appendValues;

public class Update {

    public static <T> PreparedStatement prepareUpdateStatement(Connection connection, T object) throws SQLException {

        StringBuilder stringBuilder = new StringBuilder();

        Class<?> objectClass = object.getClass();

        String tableName = Arrays
                .stream(objectClass.getAnnotations())
                .filter(annotation -> annotation instanceof Entity)
                .map(annotation -> ((Entity) annotation).tableName())
                .findFirst()
                .orElseThrow(() -> new RuntimeException("object must be annotated with @Entity"));


        stringBuilder.append("INSERT INTO ");
        stringBuilder.append(tableName);
        stringBuilder.append("(");

        Field[] columns = Arrays.stream(objectClass.getDeclaredFields())
                .filter(field -> field.isAnnotationPresent(ColumnInfo.class))
                .toArray(Field[]::new);

        List<String> autoGenerated = new ArrayList<>();

        for (int i = 0; i < columns.length; i++) {
            Field column = columns[i];
            ColumnInfo columnInfo = column.getAnnotation(ColumnInfo.class);
            if (!columnInfo.autoGenerated()) {
                stringBuilder.append(columnInfo.name());
                if (i < columns.length - 1) {
                    stringBuilder.append(", ");
                }
            } else {
                autoGenerated.add(columnInfo.name());
            }
        }
        stringBuilder.append(") VALUES");

        stringBuilder.append(appendValues(columns, object));

        if (!autoGenerated.isEmpty()) {
            stringBuilder.append(" RETURNING ");
        }
        for (int i = 0; i < autoGenerated.size(); i++) {
            String generated = autoGenerated.get(i);
            stringBuilder.append(generated);
            if (i < autoGenerated.size() - 1) {
                stringBuilder.append(", ");
            }
        }

        stringBuilder.append(";");
        System.out.println(stringBuilder);
        return connection.prepareStatement(stringBuilder.toString());
    }
}
